# python 面向过程编程思想 与 面向对象编程思想 

#--# 面向过程：face_to_process.py
1. 导入各种外部库 :import numpy
2. 设计各种全局变量 : const x = PI
3. 写一个函数完成某个功能: def sign(x)
4. 写一个函数完成某个功能: def fix_start(x)
5. 写一个函数完成某个功能
6. 写一个函数完成某个功能
7. 写一个函数完成某个功能
8. ......
9. 写一个main函数作为程序入口 def __main__(index)

#--# 面向对象：face_to_object.py 
1. 导入各种外部库: import torch 
2. 设计各种全局变量: const MAXNUM = 100
3. 决定你要的类：  class a:
4. 给每个类提供完整的一组操作 : __init__() etc
5. 明确地使用继承来表现不同类之间的共同点: class b(a,c):
6. 根据需要，决定是否写一个main函数作为程序入口 def __main__()
explainaton: 面向对象编程，将函数和变量进一步封装成类，类才是程序的基本元素。 
             类将数据和操作紧紧的结合在一起，并且保护数据不会被外界的函数意外改变。
             类与类的实例（即对象）是 面向对象的核心概念，是面向过程编程和函数式编程的根本区别。
#-#example 
